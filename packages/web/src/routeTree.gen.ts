/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthDashboardImport } from './routes/_auth/dashboard'
import { Route as AuthTasklistTasklistIdImport } from './routes/_auth/tasklist/$tasklistId'
import { Route as AuthTasklistTasklistIdTaskNewImport } from './routes/_auth/tasklist/$tasklistId.task/new'
import { Route as AuthTasklistTasklistIdTaskTaskIdEditImport } from './routes/_auth/tasklist/$tasklistId.task/$taskId.edit'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthDashboardRoute = AuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTasklistTasklistIdRoute = AuthTasklistTasklistIdImport.update({
  id: '/tasklist/$tasklistId',
  path: '/tasklist/$tasklistId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTasklistTasklistIdTaskNewRoute =
  AuthTasklistTasklistIdTaskNewImport.update({
    id: '/task/new',
    path: '/task/new',
    getParentRoute: () => AuthTasklistTasklistIdRoute,
  } as any)

const AuthTasklistTasklistIdTaskTaskIdEditRoute =
  AuthTasklistTasklistIdTaskTaskIdEditImport.update({
    id: '/task/$taskId/edit',
    path: '/task/$taskId/edit',
    getParentRoute: () => AuthTasklistTasklistIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardImport
      parentRoute: typeof AuthImport
    }
    '/_auth/tasklist/$tasklistId': {
      id: '/_auth/tasklist/$tasklistId'
      path: '/tasklist/$tasklistId'
      fullPath: '/tasklist/$tasklistId'
      preLoaderRoute: typeof AuthTasklistTasklistIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/tasklist/$tasklistId/task/new': {
      id: '/_auth/tasklist/$tasklistId/task/new'
      path: '/task/new'
      fullPath: '/tasklist/$tasklistId/task/new'
      preLoaderRoute: typeof AuthTasklistTasklistIdTaskNewImport
      parentRoute: typeof AuthTasklistTasklistIdImport
    }
    '/_auth/tasklist/$tasklistId/task/$taskId/edit': {
      id: '/_auth/tasklist/$tasklistId/task/$taskId/edit'
      path: '/task/$taskId/edit'
      fullPath: '/tasklist/$tasklistId/task/$taskId/edit'
      preLoaderRoute: typeof AuthTasklistTasklistIdTaskTaskIdEditImport
      parentRoute: typeof AuthTasklistTasklistIdImport
    }
  }
}

// Create and export the route tree

interface AuthTasklistTasklistIdRouteChildren {
  AuthTasklistTasklistIdTaskNewRoute: typeof AuthTasklistTasklistIdTaskNewRoute
  AuthTasklistTasklistIdTaskTaskIdEditRoute: typeof AuthTasklistTasklistIdTaskTaskIdEditRoute
}

const AuthTasklistTasklistIdRouteChildren: AuthTasklistTasklistIdRouteChildren =
  {
    AuthTasklistTasklistIdTaskNewRoute: AuthTasklistTasklistIdTaskNewRoute,
    AuthTasklistTasklistIdTaskTaskIdEditRoute:
      AuthTasklistTasklistIdTaskTaskIdEditRoute,
  }

const AuthTasklistTasklistIdRouteWithChildren =
  AuthTasklistTasklistIdRoute._addFileChildren(
    AuthTasklistTasklistIdRouteChildren,
  )

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRoute
  AuthTasklistTasklistIdRoute: typeof AuthTasklistTasklistIdRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRoute,
  AuthTasklistTasklistIdRoute: AuthTasklistTasklistIdRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthDashboardRoute
  '/tasklist/$tasklistId': typeof AuthTasklistTasklistIdRouteWithChildren
  '/tasklist/$tasklistId/task/new': typeof AuthTasklistTasklistIdTaskNewRoute
  '/tasklist/$tasklistId/task/$taskId/edit': typeof AuthTasklistTasklistIdTaskTaskIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard': typeof AuthDashboardRoute
  '/tasklist/$tasklistId': typeof AuthTasklistTasklistIdRouteWithChildren
  '/tasklist/$tasklistId/task/new': typeof AuthTasklistTasklistIdTaskNewRoute
  '/tasklist/$tasklistId/task/$taskId/edit': typeof AuthTasklistTasklistIdTaskTaskIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/_auth/tasklist/$tasklistId': typeof AuthTasklistTasklistIdRouteWithChildren
  '/_auth/tasklist/$tasklistId/task/new': typeof AuthTasklistTasklistIdTaskNewRoute
  '/_auth/tasklist/$tasklistId/task/$taskId/edit': typeof AuthTasklistTasklistIdTaskTaskIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/dashboard'
    | '/tasklist/$tasklistId'
    | '/tasklist/$tasklistId/task/new'
    | '/tasklist/$tasklistId/task/$taskId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/dashboard'
    | '/tasklist/$tasklistId'
    | '/tasklist/$tasklistId/task/new'
    | '/tasklist/$tasklistId/task/$taskId/edit'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/_auth/dashboard'
    | '/_auth/tasklist/$tasklistId'
    | '/_auth/tasklist/$tasklistId/task/new'
    | '/_auth/tasklist/$tasklistId/task/$taskId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/dashboard",
        "/_auth/tasklist/$tasklistId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/dashboard": {
      "filePath": "_auth/dashboard.tsx",
      "parent": "/_auth"
    },
    "/_auth/tasklist/$tasklistId": {
      "filePath": "_auth/tasklist/$tasklistId.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/tasklist/$tasklistId/task/new",
        "/_auth/tasklist/$tasklistId/task/$taskId/edit"
      ]
    },
    "/_auth/tasklist/$tasklistId/task/new": {
      "filePath": "_auth/tasklist/$tasklistId.task/new.tsx",
      "parent": "/_auth/tasklist/$tasklistId"
    },
    "/_auth/tasklist/$tasklistId/task/$taskId/edit": {
      "filePath": "_auth/tasklist/$tasklistId.task/$taskId.edit.tsx",
      "parent": "/_auth/tasklist/$tasklistId"
    }
  }
}
ROUTE_MANIFEST_END */

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String     @id @default(uuid())
  notionId          String?    @unique
  notionUsername    String?
  notionAccessToken String?
  tasks             Task[]
  habits            Habit[]
  tasklists         Tasklist[]
  Session           Session[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Tasklist {
  id     String @id @default(uuid())
  title  String
  tasks  Task[]
  userId String
  user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  difficulty  String
  dueDate     DateTime?
  completed   Boolean   @default(false)
  tasklistId  String?
  tasklist    Tasklist? @relation(fields: [tasklistId], references: [id])
  subtasks    Subtask[]
  userId      String
  user        User      @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Subtask {
  id           String  @id @default(uuid())
  title        String
  completed    Boolean @default(false)
  parentTaskId String
  parentTask   Task    @relation(references: [id], fields: [parentTaskId], onDelete: Cascade)
}

model Habit {
  id             String            @id @default(uuid())
  userId         String
  name           String
  frequencyType  String
  frequencyValue Int?
  days           String[]
  completionMode String
  goalValue      Int
  unit           String?
  createdAt      DateTime          @default(now())
  completions    HabitCompletion[]
  user           User              @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model HabitCompletion {
  id      String   @unique
  habitId String
  count   Int
  date    DateTime
  habit   Habit    @relation(references: [id], fields: [habitId])
}

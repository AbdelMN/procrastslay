// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int        @id @default(autoincrement())
  notionId          String?    @unique
  notionUsername    String?
  notionAccessToken String?
  tasks             Task[]
  habits            Habit[]
  databases         Tasklist[]
}

model Tasklist {
  id Int @id @default(autoincrement())

  type   String
  tasks  Task[]
  userId Int
  user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  dueDate     DateTime?
  completed   Boolean   @default(false)
  tasklistId  Int?
  tasklist    Tasklist? @relation(fields: [tasklistId], references: [id])
  subtasks
  userId      Int
  user        User      @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Habit {
  id             Int      @id @default(autoincrement())
  userId         Int
  name           String
  frequencyType  String
  frequencyValue Int?
  days           String?
  completionMode String
  goalValue      Int?
  unit           String?
  createdAt      DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
